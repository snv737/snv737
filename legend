using System;
namespace factorialExample{
    class programm{
        static void Main(string[] args){
            int number,fact=1,i;
            Console.Write("enter any number");
              number = int.Parse(Console.ReadLine());
              for(i=1;i<=number;i++)
              {
                  fact=fact*i;
              }
              Console.WriteLine($"factorial of {number} is {fact}");
              Console.ReadKey();
              
        }
    }
}




using System;

class Program
{
    static void Main()
    {
        // Input from user
        Console.Write("Enter a number: ");
        double number = Convert.ToDouble(Console.ReadLine());

        // Calculate the cube
        double cube = Math.Pow(number, 3);

        // Output the result
        Console.WriteLine("The cube of {0} is {1}", number, cube);
    }
}




using System;

namespace FibonacciExample
{
    class Program
    {
        static void Main(string[] args)
        {
            Console.Write("Enter the number of Fibonacci terms: ");
            int number = int.Parse(Console.ReadLine());

            int n1 = 0, n2 = 1, n3;

            Console.Write(n1 + " " + n2 + " ");  // print first two terms

            for (int i = 2; i < number; i++)
            {
                n3 = n1 + n2;
                Console.Write(n3 + " ");
                n1 = n2;
                n2 = n3;
            }

            Console.ReadKey();
        }
    }
}




using System;

namespace MoneyConversion
{
    class Program
    {
        static void Main(string[] args)
        {
            // Hardcoded conversion rate (e.g., 1 USD = 74.50 INR)
            double conversionRate = 74.50;

            // Get the amount in USD
            Console.Write("Enter the amount in USD: ");
            double amountInUSD = double.Parse(Console.ReadLine());

            // Convert to INR
            double amountInINR = amountInUSD * conversionRate;

            // Display the result
            Console.WriteLine($"{amountInUSD} USD is equivalent to {amountInINR} INR.");
            
            Console.ReadKey();
        }
    }
}



<%@ Page Language="C#" AutoEventWireup="true"
CodeBehind="WebForm1.aspx.cs" Inherits="Calen.WebForm1" %>
<!DOCTYPE html>
<html xmlns="hƩp://www.w3.org/1999/xhtml">
<head runat="server">
<Ɵtle></Ɵtle>
</head>
<body>
<form id="form1" runat="server">
<div>
<asp:Calendar ID="Calendar1" runat="server"
OnSelecƟonChanged="Calendar1_SelecƟonChanged"></asp:Calendar>
<br />
<asp:Label ID="Label1" runat="server" Text="Label"></asp:Label>
<br />
<asp:Label ID="Label2" runat="server" Text="Label"></asp:Label>
<br />
<asp:Label ID="Label3" runat="server" Text="Label"></asp:Label>
<br />
<asp:Label ID="Label4" runat="server" Text="Label"></asp:Label>
<br />
<asp:Label ID="Label5" runat="server" Text="Label"></asp:Label>
<br />
<asp:BuƩon ID="BuƩon1" runat="server" OnClick="BuƩon1_Click"
Text="Result" />
<asp:BuƩon ID="BuƩon2" runat="server" OnClick="BuƩon2_Click"
Text="Reset" />
</div>
</form>
</body>
</html>
Logic:-
using System;
using System.CollecƟons.Generic;
using System.Linq;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;
namespace Calen
{public parƟal class WebForm1 : System.Web.UI.Page
{
protected void Page_Load(object sender, EventArgs e)
{
}
protected void Calendar1_SelecƟonChanged(object sender, EventArgs e)
{
Label1.Text = "Your Selected Date:" +
Calendar1.SelectedDate.Date.ToString();
}
protected void BuƩon2_Click(object sender, EventArgs e)
{
Label1.Text = "";
Label2.Text = "";
Label3.Text = "";
Label4.Text = "";
Label5.Text = "";
Calendar1.SelectedDates.Clear();
}
protected void BuƩon1_Click(object sender, EventArgs e)
{
Calendar1.FirstDayOfWeek = FirstDayOfWeek.Sunday;
Calendar1.NextPrevFormat = NextPrevFormat.ShortMonth;
Calendar1.TitleFormat = TitleFormat.Month;
Label2.Text = "Todays Date" + Calendar1.TodaysDate.ToShortDateString();
Label3.Text = "GanpaƟ VacaƟon Start: 19-09-2023";
TimeSpan d = new DateTime(2023, 9, 19) - DateTime.Now;
Label4.Text = "Days Remaining For GanpaƟ VacaƟon:" +
d.Days.ToString();
TimeSpan d1 = new DateTime(2023, 12, 31) - DateTime.Now;
Label5.Text = "Days Remaining for New Year:" + d1.Days.ToString();
if (Calendar1.SelectedDate.ToShortDateString() == "9-19-2023")
Label3.Text = "<b>GanpaƟ FesƟval Start</b>";
if (Calendar1.SelectedDate.ToShortDateString() == "9-27-2023")
Label3.Text = "<b>GanpaƟ FesƟval End</b>";
}
protected void Calendar1_DayRender(object sender,
System.Web.UI.WebControls.DayRenderEventArgs e)
{
if (e.Day.Date.Day == 5 && e.Day.Date.Month == 9)
{
e.Cell.BackColor = System.Drawing.Color.Yellow;
Label lbl = new Label();
lbl.Text = "<br>Teachers Day!";
e.Cell.Controls.Add(lbl);
}
if (e.Day.Date.Day == 13 && e.Day.Date.Month == 9)
{
Calendar1.SelectedDate = new DateTime(2023, 9, 12);
Calendar1.SelectedDates.SelectRange(Calendar1.SelectedDate,
Calendar1.SelectedDate.AddDays(10));
Label lbl1 = new Label();
lbl1.Text = "<br>GanpaƟ!";
e.Cell.Controls.Add(lbl1);
}
}
}
}
Output:
